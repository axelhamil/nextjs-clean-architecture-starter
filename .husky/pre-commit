#!/bin/sh

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
BOLD='\033[1m'
NC='\033[0m' # No Color

BIOME_WARNINGS=0
WARNING_COUNT=0

# Utility functions
print_header() {
    echo "\n${BOLD}${BLUE}════════════════════════════════════════════${NC}"
    echo "${BOLD}${BLUE}   🔍 PRE-COMMIT CHECKS STARTED${NC}"
    echo "${BOLD}${BLUE}════════════════════════════════════════════${NC}\n"
}

print_section() {
    echo "${CYAN}▶ $1...${NC}"
}

print_success() {
    echo "${GREEN}✓ $1${NC}"
}

print_error() {
    echo "${RED}✕ $1${NC}\n"
    echo "${RED}Command output:${NC}\n$2\n"
}

print_warning() {
    echo "\n${YELLOW}${BOLD}⚠ $1${NC}\n"
}

print_footer() {
    echo "\n${BOLD}════════════════════════════════════════════${NC}"
    if [ $1 -eq 0 ]; then
        if [ $BIOME_WARNINGS -eq 1 ]; then
            echo "${BOLD}${YELLOW}⚠ ALL PRE-COMMIT CHECKS PASSED WITH WARNINGS${NC}"
            echo "${YELLOW}   $WARNING_COUNT Biome warnings detected. Consider fixing them.${NC}"
        else
            echo "${BOLD}${GREEN}✅ ALL PRE-COMMIT CHECKS PASSED${NC}"
        fi
    else
        echo "${BOLD}${RED}❌ PRE-COMMIT CHECKS FAILED${NC}"
        exit 1
    fi
    echo "${BOLD}════════════════════════════════════════════${NC}\n"
}

# Function to run command and capture output
run_command() {
    local command_output
    command_output=$($1 2>&1)
    local exit_code=$?

    if [ $exit_code -eq 0 ]; then
        print_success "$2"
        return 0
    else
        print_error "$3" "$command_output"
        print_footer 1
        exit 1
    fi
}

# Function to run lint and handle warnings
run_lint_command() {
    local command_output
    command_output=$(pnpm lint 2>&1)
    local exit_code=$?

    if echo "$command_output" | grep -q "error"; then
        print_error "Code lint failed" "$command_output"
        print_footer 1
        exit 1
    elif echo "$command_output" | grep -qE "Found [0-9]+ warning"; then
        BIOME_WARNINGS=1
        WARNING_COUNT=$(echo "$command_output" | grep -oE "Found [0-9]+ warning" | awk '{print $2}')
        print_warning "Code lint has warnings: $WARNING_COUNT detected."
        echo "$command_output"
        return 0
    else
        print_success "Code lint is valid"
        return 0
    fi
}

# Start script
print_header

# Get staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.ts\|\.tsx\|\.js\|\.jsx\|\.json\|\.md\|\.css\|\.scss\|\.html\|\.yml\|\.yaml$' || true)

if [ -z "$STAGED_FILES" ]; then
    print_warning "No relevant files staged for commit. Skipping checks."
    print_footer 0
    exit 0
fi

# Format check
print_section "Checking code format"
run_command "pnpm format" "Code formatting is valid" "Code formatting failed"

# Lint check with Biome warnings handled
print_section "Checking code lint"
run_lint_command

# Type checking
print_section "Checking types"
run_command "pnpm type-check" "Types are valid" "Type check failed"

print_footer 0
exit 0
