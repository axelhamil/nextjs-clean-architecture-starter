#!/bin/sh

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
BOLD='\033[1m'
NC='\033[0m' # No Color

# Utility functions
print_header() {
    echo "\n${BOLD}${BLUE}════════════════════════════════════════════${NC}"
    echo "${BOLD}${BLUE}   🚀 PRE-PUSH CHECKS STARTED${NC}"
    echo "${BOLD}${BLUE}════════════════════════════════════════════${NC}\n"
}

print_section() {
    echo "${CYAN}▶ $1...${NC}"
}

print_success() {
    echo "${GREEN}✓ $1${NC}"
}

print_error() {
    echo "${RED}✕ $1${NC}\n"
    echo "${RED}Command output:${NC}\n$2"
}

print_warning() {
    echo "${YELLOW}⚠ $1${NC}"
}

print_footer() {
    if [ $1 -eq 0 ]; then
        echo "\n${BOLD}${GREEN}════════════════════════════════════════════${NC}"
        echo "${BOLD}${GREEN}   ✅ ALL PRE-PUSH CHECKS PASSED${NC}"
        echo "${BOLD}${GREEN}════════════════════════════════════════════${NC}\n"
    else
        echo "\n${BOLD}${RED}════════════════════════════════════════════${NC}"
        echo "${BOLD}${RED}   ❌ PRE-PUSH CHECKS FAILED${NC}"
        echo "${BOLD}${RED}════════════════════════════════════════════${NC}\n"
    fi
}

# Function to run command and capture output
run_command() {
    local command_output
    command_output=$($1 2>&1)
    local exit_code=$?
    
    if [ $exit_code -eq 0 ]; then
        print_success "[$2] $3"
        return 0
    else
        print_error "[$2] $4" "$command_output"
        print_footer 1
        return 1
    fi
}

# Start script
print_header

# Get branch name and current timestamp
BRANCH_NAME=$(git symbolic-ref --short HEAD)
TIMESTAMP=$(date '+%H:%M:%S')
PROTECTED_BRANCHES="^(main|master|develop|staging|prod)$"

if echo "$BRANCH_NAME" | grep -qE "$PROTECTED_BRANCHES"; then
    print_warning "[$TIMESTAMP] Protected branch detected: '$BRANCH_NAME'"
    print_warning "Running comprehensive checks...\n"
    
    # Type checking
    print_section "Type checking"
    run_command "pnpm type-check" "$TIMESTAMP" \
        "Types are valid" \
        "Type check failed" || exit 1

    # Testing
    print_section "Running tests"
    run_command "pnpm test" "$TIMESTAMP" \
        "All tests passed" \
        "Tests failed" || exit 1

    # Building
    print_section "Building project"
    run_command "pnpm build" "$TIMESTAMP" \
        "Build completed" \
        "Build failed" || exit 1
else
    print_warning "[$TIMESTAMP] Feature branch detected: '$BRANCH_NAME'"
    print_warning "Running basic checks...\n"
    
    # Type checking only for feature branches
    print_section "Type checking"
    run_command "pnpm type-check" "$TIMESTAMP" \
        "Types are valid" \
        "Type check failed" || exit 1
fi

print_footer 0 